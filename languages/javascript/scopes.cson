'program': 'source.js'
'function': 'meta.function.js'
'function > identifier': 'entity.name.function.js'
'method_definition > identifier': 'entity.name.function.js'
'class > identifier': 'entity.name.type.class.js'
'formal_parameters': 'meta.parameters.js'
'formal_parameters > identifier': 'variable.parameter.function.js'
'member_access > identifier:nth-child(2)': 'variable.other.object.property.js'
'pair > identifier:nth-child(0)': 'variable.other.object.property.js'
'function_call > member_access > identifier:nth-child(2)': 'entity.name.function.js'
'function_call > identifier': 'entity.name.function.js'
'new_expression > function_call > identifier': 'meta.class.instance.constructor'

'import_specifier > identifier': 'variable.other.module'
'import_clause > identifier': 'variable.other.module'

'this_expression': 'variable.language.js'
'number': 'constant.numeric.decimal.js'
'string': 'string.quoted.single.js'
'regex': 'string.regexp.js'
'template_string': 'string.quoted.template.js'
'undefined': 'constant.language.js'
'null': 'constant.language.null.js'
'true': 'constant.language.boolean.true.js'
'false': 'constant.language.boolean.false.js'
'comment': 'comment.block.js'

'ERROR': 'syntax-error'

'"("': 'punctuation.definition.parameters.begin.bracket.round.js'
'")"': 'punctuation.definition.parameters.end.bracket.round.js'
'"{"': 'punctuation.definition.function.body.begin.bracket.curly.js'
'"}"': 'punctuation.definition.function.body.end.bracket.curly.js'

'"var"': 'storage.type.var.js'
'"let"': 'storage.type.var.js'
'"const"': 'storage.modifier.js'
'"class"': 'storage.type.class.js'
'"function"': 'storage.type.function.js'

'"+"': 'keyword.operator.js'
'"-"': 'keyword.operator.js'
'"*"': 'keyword.operator.js'
'"/"': 'keyword.operator.js'
'"in"': 'keyword.operator.in.js'
'"of"': 'keyword.operator.of.js'
'"new"': 'keyword.operator.new.js'
'"typeof"': 'keyword.operator.typeof.js'

'"."': 'meta.delimiter.property.period.js'
'","': 'meta.delimiter.object.comma.js'

'"if"': 'keyword.control.js'
'"do"': 'keyword.control.js'
'"else"': 'keyword.control.js'
'"while"': 'keyword.control.js'
'"for"': 'keyword.control.js'
'"return"': 'keyword.control.js'
'"break"': 'keyword.control.js'
'"continue"': 'keyword.control.js'
'"throw"': 'keyword.control.js'
'"try"': 'keyword.control.js'
'"catch"': 'keyword.control.js'
'"finally"': 'keyword.control.js'
'"switch"': 'keyword.control.js'
'"case"': 'keyword.control.js'
'"default"': 'keyword.control.js'
'"export"': 'keyword.control.js'
'"import"': 'keyword.control.js'
'"from"': 'keyword.control.js'
'"yield"': 'keyword.control.js'
'"async"': 'keyword.control.js'
'"await"': 'keyword.control.js'
